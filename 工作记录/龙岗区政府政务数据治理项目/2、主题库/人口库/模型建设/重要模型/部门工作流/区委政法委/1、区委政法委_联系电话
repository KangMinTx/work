--SparkSQL
--_********************************************************_
--author: lgadmin
--create time: 2020-10-19 14:31:21
--_********************************************************_
insert overwrite table std_zf_lxdh partition (dt = '${DayBeforeStartTime}')
select      
     if(t.zjhm RLIKE '(^[1-9][0-9]{5}(18|19|([23][0-9]))[0-9]{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)[0-9]{3}[0-9Xx]$)|(^[1-9][0-9]{5}[0-9]{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)[0-9]{3}$)',"中华人民共和国居民身份证", t.zjlx), -- 证件类型
	 t.zjhm, -- 证件号码
	 t.xm, -- 姓名
	 t.lxdh, -- 联系电话
	 t.djsj, -- 登记时间
	 t.lyb, -- 来源表
	 t.lyjg -- 来源机构
from 
	(
	select      
		tt.zjlx, -- 证件类型
		tt.zjhm, -- 证件号码
		tt.xm, -- 姓名
		tt.lxdh, -- 联系电话
		tt.djsj, -- 登记时间
		tt.lyb, -- 来源表
		tt.lyjg, -- 来源机构
		row_number() over (partition by coalesce(tt.zjhm,''),coalesce(tt.lxdh,'') order by tt.djsj desc ) as rn
	from 
		(
		select 
			cardtypeid as zjlx, -- 证件类型
			cardno as zjhm, -- 证件号码
			name as xm, -- 姓名
			mtel as lxdh, -- 手机
			updatetime as djsj, -- 修改时间
			"std_qzf_zfw_resident1" as lyb, -- 来源表
			lyjg as lyjg -- 来源机构
		from std_qzf_zfw_resident1 where (mtel REGEXP '^((13[0-9])|(14[0-9])|16[0-9]|(15([0-9]))|(17[0-9])|(18[0-9])|(19[0-9]))\\d{8}$' or mtel REGEXP '^(0\\d{2}-\\d{8}(-\\d{1,4})?)|(0\\d{3}-\\d{7,8}(-\\d{1,4})?)$')
		union all
		select 
			cardtypeid as zjlx, -- 法人证件类型
			cardno as zjhm, -- 法人证件号码
			legalname as xm, -- 法人姓名
			legaltelphone as lxdh, -- 法人联系电话
			updatetime as djsj, -- 修改时间
			"std_qzf_zfw_enterpriseinfomanage1" as lyb, -- 来源表
			lyjg as lyjg -- 来源机构
		from std_qzf_zfw_enterpriseinfomanage1 a join(select max(dt) maxdt from std_qzf_zfw_enterpriseinfomanage1) b on a.dt=b.maxdt
		union all
		select 
			"中华人民共和国居民身份证" as zjlx, -- 证件类型
			cardno as zjhm, -- 身份证号
			name as xm, -- 姓名
			phone as lxdh, -- 联系电话
			credate as djsj, -- 创建时间
			"std_qyj_ajj_insexecuter" as lyb, -- 来源表
			lyjg as lyjg -- 来源机构
		from std_qzf_zfw_cent_person1 a join(select max(dt) maxdt from std_qzf_zfw_cent_person1) b on a.dt=b.maxdt
 ) tt ) t where t.rn=1;
